geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 10)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
mean(dd$x)
# Mean of 70
draws <- rnorm(150);
draws<-8.4*(draws-mean(draws))/sd(draws)+70
dens <- density(draws)
dd <- with(dens,data.frame(x,y))
q90 <- quantile(dd$x, .95)
q100 <- max(dd$x)
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
q100 <- 100
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
set.seed(151120)
# Mean of 70
draws <- rnorm(150);
draws<-8.4*(draws-mean(draws))/sd(draws)+70
dens <- density(draws)
plot(dens) + abline(v = mean(draws),col = "gray60",
lwd = 2)
q90 <- quantile(dd$x, .95)
q100 <- max(dd$x)
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
library(ggplot2)
library(ggpubr)
dd <- with(dens,data.frame(x,y))
q90 <- quantile(dd$x, .95)
q100 <- max(dd$x)
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
dd <- with(dens,data.frame(x,y))
q90 <- quantile(dd$x, .95)
q100 <- max(dd$x)
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + #scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
q100 <-100
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
q90 <- quantile(dd$x, .95)
q100 <-100
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20)) +
geom_vline(xintercept=mean(dd$x),  color="black")
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
)#$ +border(color = "gray60")
p
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))# +
p <- p +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +border(color = "gray60")
p
View(dd)
q90 <- quantile(dd$x, .95)
q100 <-100
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="gray",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))+
geom_vline(xintercept=mean(dd$x),  color="black")
p
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="red",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))+
geom_vline(xintercept=mean(dd$x),  color="black")
p
q90 <- quantile(dd$x, .95)
q100 <-100
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="red",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))+
geom_vline(xintercept=mean(dd$x),  color="black")
p
set.seed(151120)
# Mean of 70
draws <- rnorm(150);
draws<-8.4*(draws-mean(draws))/sd(draws)+70
dens <- density(draws)
plot(dens) + abline(v = mean(draws),col = "gray60",
lwd = 2)
axis(side = 1, at=seq(40,100, by=10))
q90 <- quantile(draws, .95)
q100 <- 100
x1 <- min(which(dens$x >= q90))
x2 <- max(which(dens$x <  q100))
with(dens, polygon(x=c(x[c(x1,x1:x2,x2)]), y= c(0, y[x1:x2], 0), col="gray"))
library(ggplot2)
library(ggpubr)
dd <- with(dens,data.frame(x,y))
q90 <- quantile(dd$x, .95)
q100 <-100
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="red",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))+
geom_vline(xintercept=mean(dd$x),  color="black")
p
# Mean of 70
draws <- rnorm(150);
draws<-8.4*(draws-mean(draws))/sd(draws)+70
dens <- density(draws)
library(ggplot2)
library(ggpubr)
dd <- with(dens,data.frame(x,y))
q90 <- quantile(dd$x, .95)
q100 <-100
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="red",color=NA,alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))+
geom_vline(xintercept=mean(dd$x),  color="black")
p
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="red",alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))+
geom_vline(xintercept=mean(dd$x),  color="black")
p
View(dd)
qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q75 & x<q95),aes(ymax=y),ymin=0,
fill="red",colour=NA,alpha=0.5)
qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="red",colour=NA,alpha=0.5)
qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,dd$x>q90 & dd$x<q100),aes(ymax=y),ymin=0,
fill="red",colour=NA,alpha=0.5)
p <- qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,x>q90 & x<q100),aes(ymax=y),ymin=0,
fill="red",alpha=0.5) + scale_x_continuous(breaks=seq(40, 100, 20))+
geom_vline(xintercept=mean(dd$x),  color="black")
qplot(x,y,data=dd,geom="line")+
geom_ribbon(data=subset(dd,dd$x>q90 & dd$x<q100),aes(ymax=y),ymin=0,
fill="red",colour=NA,alpha=0.5)
install.packages("statgenGxE")
library("statgenGxE", lib.loc="~/R/win-library/3.6")
remotes::install_github("Biometris/statgenGxE", ref = "develop", dependencies = TRUE)
install.packages("manipulateWidget")
library("statgenGxE", lib.loc="~/R/win-library/3.6")
remotes::install_github("Biometris/statgenGxE", ref = "develop", dependencies = TRUE)
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("statgenGxE")
remotes::install_github("Biometris/statgenGxE", ref = "develop", dependencies = TRUE)
install.packages("tinytex")
install.packages("xfun")
install.packages("tinytex")
options(repos = c(
yihui = 'https://yihui.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
))
install.packages('xfun')
updateR()
library(installr)
options(repos = c(
yihui = 'https://yihui.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
))
install.packages('installr')
library(installr)
updateR()
install.packages("iterators")
library(iterators)
install.packages("stars")
install.packages("sf")
install.packages("stars")
install.packages("caret")
library(caret)
library(caret)
install.packages("timeDate")
library(caret)
install.packages("gower")
library(caret)
install.packages("ipred")
library(caret)
install.packages("lubridate")
library(caret)
install.packages("randomForest")
install.packages("ggpairs")
install.packages("GGally")
install.packages("kernlab")
install.packages("C:/Users/eadey/Downloads/genomicSimulation_0.2.tar.gz", repos = NULL, type = "source")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
library(dplyr)
library(janitor)
library(lme4)
#data=read.csv("GAWNSUN.csv", header = 1)
pheno_data <- read.csv("GAWNSUN_update.txt", sep = "\t", header = T) %>% clean_names()
rownames(pheno_data)= pheno_data$Id
pheno_data=pheno_data[,-1]
class(pheno_data)
dim(pheno_data)
summary(pheno_data)
pheno_data %>% head(3)
pheno_data=transform(pheno_data, rep=factor(rep), envt=factor(envt), variety=factor(variety), head_date=as.numeric(head_date), plant_ht=as.numeric(plant_ht), test_wt=as.numeric(test_wt))
str(pheno_data)
pheno_data %>% head
table(pheno_data$location)
`length<-.Date`(pheno_data$location)
length(pheno_data$location)
length(unique((pheno_data$location))
)
ggplot(pheno_data, aes(yield)) +geom_histogram() + facet_wrap(~location)
library(ggplot2)
ggplot(pheno_data, aes(yield)) +geom_histogram() + facet_wrap(~location)
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +geom_histogram() + facet_wrap(~location)
pheno_data %>% #filter(!is.na(yield)) %>%
ggplot(aes(yield)) +geom_histogram() + facet_wrap(~location)
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +geom_histogram() + facet_wrap(~location)
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) +
z
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location)
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + theme_ipsum()
library(dplyr)
library(janitor)
library(lme4)
library(hrbrthemes)
install.packages(hrbrthemes)
install.packages("hrbrthemes")
library(dplyr)
library(janitor)
library(lme4)
library(hrbrthemes)
install.packages("extrafontdb")
library(dplyr)
library(janitor)
library(lme4)
library(hrbrthemes)
install.packages("Rttf2pt1")
library(dplyr)
library(janitor)
library(lme4)
library(hrbrthemes)
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + theme_ipsum()
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + theme_bw()
# group by locs
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) #+ theme_bw()
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + theme_bw()
# group by locs
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666") # + facet_wrap(~location) + theme_bw()
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + theme_bw()
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + theme_bw()
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + geom_vline(aes(xintercept=mean(yield)),
color="blue", linetype="dashed", size=1) + facet_wrap(~year) + theme_bw()
pheno_data %>% group_by(year) %>% summarize(mean_yld = mean(yield))
# histogram by year
pheno_data %>% group_by(year) %>% summarize(mean_yld = mean(yield, rm.na = T))
pheno_data %>% group_by(year) %>% summarize(mean_yld = mean(yield, na.rm = T))
mean_year <- pheno_data %>% group_by(year) %>% summarize(mean_yld = mean(yield, na.rm = T))
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + geom_vline(mean_year, aes(xintercept=mean_yld),
color="blue", linetype="dashed", size=1) + facet_wrap(~year) + theme_bw()
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + geom_vline(mean_year, aes(xintercept=mean_yld),
color="blue", linetype="dashed", size=1)  + theme_bw()
pheno_data %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + geom_vline(aes(xintercept=mean(yield)),
color="blue", linetype="dashed", size=1)  + theme_bw()
df.m <- merge(pheno_data, mean_year)
View(df.m)
mean_year
df.m %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + geom_vline(aes(xintercept=mean(yield)),
color="blue", linetype="dashed", size=1)  + theme_bw()
df.m %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + geom_vline(aes(xintercept=mean_yield)),
color="blue", linetype="dashed", size=1)  + theme_bw()
df.m %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + geom_vline(aes(xintercept=mean_yield),
color="blue", linetype="dashed", size=1)  + theme_bw()
df.m %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + geom_vline(aes(xintercept=mean_yld),
color="blue", linetype="dashed", size=1)  + theme_bw()
# histogram by locs
mean_loc <- pheno_data %>% group_by(location) %>% summarize(mean_yld = mean(yield, na.rm = T))
df.l <- merge(pheno_data, mean_year)
df.l %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + theme_bw()
# histogram by locs
mean_loc <- pheno_data %>% group_by(location) %>% summarize(mean_yld = mean(yield, na.rm = T))
df.l <- merge(pheno_data, mean_year)
df.l %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + geom_vline(aes(xintercept=mean_yld),
color="blue", linetype="dashed", size=1)  + theme_bw()
rm(df,l)
rm(df,l)
rm(df.l)
# histogram by locs
mean_loc <- pheno_data %>% group_by(location) %>% summarize(mean_yld = mean(yield, na.rm = T))
df.l <- merge(pheno_data, mean_loc)
df.l %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~location) + geom_vline(aes(xintercept=mean_yld),
color="blue", linetype="dashed", size=1)  + theme_bw()
# histogram by year
mean_year <- pheno_data %>% group_by(year) %>% summarize(mean_yld = mean(yield, na.rm = T))
df.y <- merge(pheno_data, mean_year)
df.y %>% filter(!is.na(yield)) %>%
ggplot(aes(yield)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")  + facet_wrap(~year) + geom_vline(aes(xintercept=mean_yld),
color="blue", linetype="dashed", size=1)  + theme_bw()
mean_year
mean_year %>% arrange(mean_yld)
mean_year %>% arrange(mean_yld)
mean_loc %>% arrange(mean_yld)
mean_loc %>% arrange(desc(mean_yld))
# base model
get_combined_blues <- function(data_fr, out_trait){
require(emmeans)
fit_model <- lm(data_fr[,out_trait] ~ rep + variety + envt, data = data_fr) ## hardcoded Line and Env
grid <- ref_grid(fit_model)
blues <- summary(emmeans(grid, "variety"))
blues <- blues[1:2]
colnames(blues) <- c("variety", out_trait)
return(blues)
}
wrap_into_df_for_comb <- function(data_frame){
# mostly hardcoded -- specific for this data
yld_data <- data_frame %>% dplyr::select(variety, rep, envt, yield)
test_data <- data_frame %>% dplyr::select(variety, rep, envt, test_wt)
head_data <- data_frame %>% dplyr::select(variety, rep, envt, head_date)
pltht_data <- data_frame %>% dplyr::select(variety, rep, envt, plant_ht)
# calls the get blues function
yld_blues <- get_combined_blues(yld_data, "yield")
print("yield done")
twt_blues <- get_combined_blues(test_data, "test_wt")
print("test_wt done")
pltht_blues <- get_combined_blues(pltht_data, "plant_ht")
print("plant height done")
head_blues <- get_combined_blues(head_data, "head_date")
print("head date done")
ay_blues1 <- yld_blues %>% full_join(twt_blues)
ay_blues2 <- ay_blues1 %>% full_join(pltht_blues)
ay_blues3 <- ay_blues2 %>% full_join(head_blues)
#ay_blues$Env <- env_name
return(ay_blues3)
}
blues_res <- wrap_into_df_for_comb(pheno_data)
View(blues_res)
devtools::create('PairReviewR')
getwd
getwd()
setwd("C:/Users/adeye017/Desktop")
setwd("C:/Users/adeye017/Desktop")
devtools::build()
setwd("C:/Users/eadey/OneDrive/Desktop/OutUMN/PairReviewR")
devtools::build()
devtools::load_all()
devtools::test()
devtools::test()
devtools::document()
devtools::document()
devtools::build()
